#include <bits/stdc++.h>
using namespace std;

void merge(int arr[], int b, int mid, int e) {
    int *left = new int[mid-b+1];
    int *right = new int[e-mid];
    for(int i=0; i<mid-b+1; i++) {
        left[i] = arr[b+i];
    }
    for(int i=0; i<e-mid; i++) {
        right[i] = arr[mid+i+1];
    }
    
    int i, j , k;
    i = j = 0;
    k = b;
    while(i < (mid-b+1) && j < (e-mid)) {
        if(left[i] <= right[j]) {
            arr[k] = left[i];
            i++;
        }    
        else {
            arr[k] = right[j];
            j++;
        }
        k++;
    }
    
    while(i < (mid-b+1))
        arr[k++] = left[i++];
    while(j < (e-mid))
        arr[k++] = right[j++];
}

void mergeSort(int arr[], int b, int e) {
    if(b >= e)
        return;
    
    int mid = (b + e)/2;
    mergeSort(arr, 0, mid); // left half
    mergeSort(arr, mid+1, e); // right half
    merge(arr, b, mid, e);
    
}
int main() {
    
    int n;
    cin >> n;
    int *arr = new int[n];
    
    for(int i=0; i<n; i++)
        cin >> arr[i];
    
    mergeSort(arr, 0, n-1);
    for(int i=0; i<n; i++)
        cout << arr[i] << " ";
    return 0;
}